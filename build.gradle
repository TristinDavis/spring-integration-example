buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
	}
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	compile.exclude module: "spring-boot-starter-logging"
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-log4j2:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-validation:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-integration:$springBootVersion"
	implementation "org.springframework.integration:spring-integration-file:$springIntegrationFileVersion"
	implementation "org.springframework.integration:spring-integration-kafka:$springIntegrationKafkaVersion"

	//Do not add lombok as jar dependency just use it for project compilation
	compileOnly "org.projectlombok:lombok:$lombokVersion"
	annotationProcessor "org.projectlombok:lombok:$lombokVersion"

	testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
	testImplementation "org.springframework.integration:spring-integration-test:$springIntegrationTestVersion"

	testCompileOnly "org.projectlombok:lombok:$lombokVersion"
	testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
}

task zipPackage(type: Zip){
	from "${buildDir}/libs"
	include '**/*'
	archiveName "${rootProject.name}-${version}.zip"
	destinationDir(file("${buildDir}/dist"))
}

task copyConfiguration(type: Copy){
	from ('src/main/config'){
		include '*'
	}
	into "${buildDir}/libs/config"
	finalizedBy zipPackage
}

task copyProperties(type: Copy){
	from ('src/main/resources'){
		include 'application.properties'
	}
	into "${buildDir}/libs/config"
	finalizedBy copyConfiguration
}

bootJar {
	finalizedBy copyProperties
}
